axis.ticks = element_blank(),
#axis.text = element_blank(),
axis.title = element_blank())
p <- p+
geom_hline(yintercept = 0,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 25,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 50,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 75,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 100, colour = "wheat4", linetype=3, size=.5)
p <- p+
geom_line(mapping=aes(x=time, y=frequency.x/total.x*100),color='orange',size = 2)+
geom_line(mapping=aes(x=time, y=frequency.y/total.y*100),size = 1.2)
print(p)
df1 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_乐乐茶_负面.csv',header = T,sep = ",")
df1 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_乐乐茶_负面.csv',header = T,sep = ",")
df2 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_乐乐茶_正面.csv',header = T,sep = ",")
df <- merge(df1,df2,by = 'time')
df <- mutate(df,time=as.Date(str_remove_all(time,"\t")))%>%
arrange(time)
p <- ggplot(df)+
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
#axis.text = element_blank(),
axis.title = element_blank())
p <- p+
geom_hline(yintercept = 0,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 25,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 50,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 75,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 100, colour = "wheat4", linetype=3, size=.5)
p <- p+
geom_line(mapping=aes(x=time, y=frequency.x/total.x*100),color='orange',size = 2)+
geom_line(mapping=aes(x=time, y=frequency.y/total.y*100),size = 1.2)
print(p)
df1 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_鹿角巷_负面.csv',header = T,sep = ",")
df2 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_鹿角巷_正面.csv',header = T,sep = ",")
df <- merge(df1,df2,by = 'time')
df <- mutate(df,time=as.Date(str_remove_all(time,"\t")))%>%
arrange(time)
p <- ggplot(df)+
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
#axis.text = element_blank(),
axis.title = element_blank())
p <- p+
geom_hline(yintercept = 0,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 25,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 50,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 75,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 100, colour = "wheat4", linetype=3, size=.5)
p <- p+
geom_line(mapping=aes(x=time, y=frequency.x/total.x*100),color='orange',size = 2)+
geom_line(mapping=aes(x=time, y=frequency.y/total.y*100),size = 1.2)
print(p)
df1 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_小啾啾_负面.csv',header = T,sep = ",")
df2 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_小啾啾_正面.csv',header = T,sep = ",")
df <- merge(df1,df2,by = 'time')
df <- mutate(df,time=as.Date(str_remove_all(time,"\t")))%>%
arrange(time)
p <- ggplot(df)+
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
#axis.text = element_blank(),
axis.title = element_blank())
p <- p+
geom_hline(yintercept = 0,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 25,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 50,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 75,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 100, colour = "wheat4", linetype=3, size=.5)
p <- p+
geom_line(mapping=aes(x=time, y=frequency.x/total.x*100),color='orange',size = 2)+
geom_line(mapping=aes(x=time, y=frequency.y/total.y*100),size = 1.2)
print(p)
df1 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_乐乐茶_负面.csv',header = T,sep = ",")
df2 <- read.csv('/Users/smg/Desktop/EDA/data/脏脏情感曲线_乐乐茶_正面.csv',header = T,sep = ",")
df <- merge(df1,df2,by = 'time')
df <- mutate(df,time=as.Date(str_remove_all(time,"\t")))%>%
arrange(time)
p <- ggplot(df)+
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
#axis.text = element_blank(),
axis.title = element_blank())
p <- p+
geom_hline(yintercept = 0,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 25,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 50,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 75,  colour = "wheat4", linetype=3, size=.5) +
geom_hline(yintercept = 100, colour = "wheat4", linetype=3, size=.5)
p <- p+
geom_line(mapping=aes(x=time, y=frequency.x/total.x*100),color='orange',size = 2)+
geom_line(mapping=aes(x=time, y=frequency.y/total.y*100),size = 1.2)
print(p)
q()
system("python /Users/smg/Desktop/gaode_boundary.py")
system("python /Users/smg/Desktop/gaode_boundary.py")
system("python /Users/smg/Desktop/gaode_boundary.py")
system("python /Users/smg/Desktop/gaode_boundary.py")
SZrankCor<-read.delim('/Applications/XAMPP/xamppfiles/htdocs/d3/Historical-ranking-data-visualization-based-on-d3.js-master/src/TOP500.csv',header = T,sep = ',')
head()
head(SZrankCor)
View(SZrankCor)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
c="汉字"
c
install.packages('gdata')
require(gdata)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
install.packages("wordcloud2")
library("wordcloud2")
wordcloud2(df,shape = "circle",size = 0.8,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#cc2d25","#fece3e"),
minSize = 5,gridSize = 15)
wordcloud2(df,shape = "circle",size = 0.8,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#cc2d25","#fece3e"),
minSize = 5,gridSize = 20)
wordcloud2(df,shape = "circle",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#cc2d25","#fece3e"),
minSize = 5,gridSize = 20)
wordcloud2(df,shape = "circle",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#cc2d25","#fece3e"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "circle",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#cfc4e1","#7d65ae"),
minSize = 4,gridSize = 20)
library(ggplot2)
wordcloud2(df,shape = "circle",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#cfc4e1","#7d65ae"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "circle",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "circle",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
library(ggplot2)
library(ggmap)
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
c="汉字"
c
install.packages('gdata')
require(gdata)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
library("wordcloud2")
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#7d65ae"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#39bda0"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#cfc4e1"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#39bda0"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#7d65ae","#39bda0"),
minSize = 4,gridSize = 20)
wordcloud2(df,shape = "cardioid",size = 1,fontFamily = "微软雅黑",hoverFunction = NULL,
#color=rep_len( c("#cfc4e1","#39bda0"), ncol(df) ),
color = ifelse(df[, 3] == 1, "#39bda0","#cadca2"),
minSize = 4,gridSize = 20)
library(ggplot2)
library(ggmap)
library(ggplot2)
library(ggmap)
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
ggmap(map, extent = "device")
downtown <- subset(crime,
-95.39681 <= lon & lon <= -95.34188 &
29.73631 <= lat & lat <=  29.78400
)
qmplot(lon, lat, data = downtown, maptype = "toner-background", color = I("red"))
qmap(location = 'amsterdam', zoom = 12)
osm <- get_openstreetmap(urlonly = TRUE)
qmap(location = 'beijing',zoom = 12,color = 'bw',source = 'osm')
robberies <- subset(downtown, offense == "robbery")
qmplot(lon, lat, data = downtown, geom = "blank", zoom = 15, maptype = "toner-background", darken = .7) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 1500)
qmplot(lon, lat, data = downtown, maptype = "toner-background", color = offense) +
facet_wrap(~ offense)
europe <- c(left = -12, bottom = 35, right = 30, top = 63)
map <- get_stamenmap(europe, zoom = 5, maptype = "toner-lite")
ggmap(map)
qmap(location = 'beijing', zoom = 12, maptype = "toner-background",source = 'stamen')
dataSZ <- read.delim('/Users/smg/Desktop/EDA/data/new-nestAnalysis.csv',header = T,sep = ',')
head(dataSZ,10)
dim(dataSZ)
str(dataSZ)
range(dataSZ$level2)
library(ggplot2)
ggplot(aes(x=latitude,y=longitude),data = dataSZ)+
geom_point(aes(color = dataSZ$level1))
p<-ggplot(dataSZ,aes(latitude,longitude))+
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
#axis.text = element_blank(),
axis.title = element_blank()) +
geom_point(dataSZ,mapping = aes(x=latitude,y=longitude),color = dataSZ$level1,alpha=1)
print(p)
ggplot(aes(x = rank),data = dataSZ)+
geom_histogram(aes(fill=live_level),bins = 30)+
scale_fill_brewer(type = 'qual')+
facet_wrap(~level2,ncol=3)
freData<- read.delim('/Users/smg/Desktop/EDA/data/histogram.csv',header = T,sep = ',')
head(freData)
hist(freData)
hist(freData, breaks = 0.1, col = "lightblue", border = "pink")
View(freData)
hist(freData$Frequency, breaks = 0.1, col = "lightblue", border = "pink")
hist(freData$Frequency, breaks = 30, col = "lightblue", border = "pink")
hist(freData$Frequency, breaks = 50, col = "lightblue", border = "pink")
hist(freData$Frequency, breaks = 50, col = "lightblue", border = "pink")
hist(freData$Frequency, breaks = 100, col = "lightblue", border = "pink")
head(freData)
hist(freData$Frequency, breaks = 100, col = "lightblue", border = "pink")
hist(freData$Frequency, breaks = 30, col = "lightblue", border = "pink")
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
#矩阵表格处理
# 首先找出工作目录的设置位置：
getwd()
#筛选json数据
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/")
install.packages("rjson")
library("rjson")
result <- fromJSON(file = "上海商圈_DT.json")
View(result)
json_data_frame <- as.data.frame(result)
View(json_data_frame)
colnames(result)
result <- fromJSON(file = "上海商圈_DT.json", flatten=TRUE)
result <- fromJSON("上海商圈_DT.json", flatten=TRUE)
library(openxlsx)
library("wordcloud2")
getwd()
figPath <- "/Users/smg/Desktop/EDA/data/yinerche.png"
wordcloud2(df, figPath = figPath, size = 1,color = "skyblue")
wordcloud2(df,shape="circle",size = 0.9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =6)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
library(openxlsx)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
require(gdata)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
wordcloud2(df,shape="circle",size = 0.9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =6)
wordcloud2(df,shape="circle",size = 0.9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =6)
wordcloud2(df,shape="circle",size = 0.9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
wordcloud2(df,shape="circle",size = 1.2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
wordcloud2(df,shape="circle",size = 5,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
wordcloud2(df,shape="circle",size = 20,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
wordcloud2(df,shape="circle",size = 20,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
wordcloud2(df,shape="circle",size = 10,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
wordcloud2(df,shape="circle",size = 8,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 2,gridSize =3)
timeline <- read.csv('/Users/smg/Desktop/EDA/data/脏脏包情感曲线.csv',header = T,sep = ",")
wordcloud2(df,shape="circle",size = 8,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 1,gridSize =1)
View(df)
wordcloud2(df,shape="circle",size = 8,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 1,gridSize =0)
wordcloud2(df,shape="circle",size = 8,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 0,gridSize =0)
wordcloud2(df,shape="circle",size = 1,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 0,gridSize =0)
wordcloud2(df,shape="circle",size = 1,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 0,gridSize =10)
wordcloud2(df,shape="circle",size = 1,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 10,gridSize =1)
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#f36f74","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
library(openxlsx)
require(gdata)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
library("wordcloud2")
wordcloud2(df, figPath = figPath, size = 1,color = "skyblue")
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 1,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
library("wordcloud2")
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
wordcloud2(df, figPath = figPath, size = 1,color = "skyblue")
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 1] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
timeline <- read.csv('/Users/smg/Desktop/EDA/data/脏脏包情感曲线.csv',header = T,sep = ",")
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 2] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 9,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,gridSize =1)
wordcloud2(df,shape="circle",size = 2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,widgetsize = 3,gridSize =1)
wordcloud2(df,shape="circle",size = 2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,widgetsize = 30,gridSize =1)
1
wordcloud2(df,shape="circle",size = 2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,widgetsize = 1,gridSize =1)
wordcloud2(df,shape="circle",size = 2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,widgetsize = NULL,gridSize =1)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
wordcloud2(df,shape="circle",size = 2,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,widgetsize = NULL,gridSize =1)
wordcloud2(df,shape="circle",size = 1,fontFamily = "Helvetica",hoverFunction = NULL,
#color=rep_len( c("#df6356","#fece3e"), ncol(df) ),
color = ifelse(df[, 3] == 1,"#6f56a6","#fbcd5d"),
minSize = 0,widgetsize = NULL,gridSize =1)
df <- read.xls('/Users/smg/Desktop/EDA/data/wordCloud.xlsx',sheet = 1,header = T,encoding="UTF-8")
df
#更改返回的路径
setwd("/Users/smg/Desktop/")
my_data <- read.csv("一周国内航线.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
Departure_data <- subset(my_data,mode == "departures")
rownames(Departure_data) = Departure_data$flight_id
Departure_data[Departure_data==""]<-NA
Departure_data_byOrigin = split(Departure_data,Departure_data$origin_city)
Departure_data_byOrigin
idsToBeReplaced <- c("zhuhai", "Zhuhai")
Departure_data[Departure_data$origin_city %in% idsToBeReplaced, "origin_city"] <- "珠海"
#出发城市结果
Departure_data_byOrigin = split(Departure_data,Departure_data$origin_city)
library(plyr)
cnt <- count(Departure_data, 'origin_city')
hist(cnt$freq,breaks=10, col="lightblue")
library(ggplot2)
library(magrittr)
library(ggpubr)
theme_set(theme_pubr())
ggplot(cnt, aes(x = origin_city, y = freq)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = freq), vjust = -0.3) +
theme_pubclean()
#根据到达城市匹配三字码
library("dplyr")
Airport_total <- read.csv("Airport_total.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T,sep=",")
Airport_code <- subset(Airport_total,select=c(airport_code,city_Eng))
colnames(Airport_code)[colnames(Airport_code)=="airport_code"] <- "airport_code2"
Airport_code
Departure_data <- inner_join(Departure_data,Airport_code,by=  c("arrival_city"="city_Eng"))
#根据出发城市的三字码匹配出发地点坐标
Airport_code_D <- subset(Airport_total,select=c(airport_code,airport_lat,airport_lng))
Departure_data <- inner_join(Departure_data,Airport_code_D,by= "airport_code")
#导出Flight_departure.csv
write.csv(Departure_data,"/Users/smg/Desktop/Flight_departure.csv")
#底层地图
library(maps)
library(geosphere)
map("world")
library(mapdata)
map("china", col = "gray40", ylim = c(18,54))
install.packages("maptools")
library(maptools)
china_map1 <- readShapePoly("mapsData/maps/bou2/bou2_4p.shp")
class(china_map1)
## [1] "SpatialPolygonsDataFrame"
## attr(,"package")
## [1] "sp"
length(china_map1)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Applications/XAMPP/xamppfiles/htdocs/d3/responsive-design/data")
throughout <- read.csv("2008-2018airportCapacity.csv",encoding ="UTF-8",header = T)
summary(throughout)
#去除NA
throughout[throughout == "#N/A"]  <- NA
throughout <- na.omit(throughout)
summary(throughout)
quantile(throughout,seq(0.1,1,0.1))
quantile(throughout,seq(0.1,1,0.1))
quantile(throughout,0.5)
quantile(throughout$capacity,seq(0.1,1,0.1))
quantile(throughout$capacity,seq(0.1,1,0.1))
quantile(throughout$capacity,seq(0.1,1,0.1))
quantile(throughout$capacity,seq(0.1,1,0.2))
quantile(throughout$capacity,seq(0.1,1,0.15))
